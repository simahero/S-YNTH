{"version":3,"sources":["Components/Pages/Login/Login.js"],"names":["Login","props","signIn","e","a","preventDefault","AuthService","login","state","username","password","res","token","context","setAuth","setState","redirect","pathname","from","location","error","className","src","alt","this","to","boxshadow","fullWidth","color","label","type","variant","value","onChange","target","onClick","React","Component","contextType","UserContext"],"mappings":"0QAOMA,E,kDAIF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IASVC,OAVmB,uCAUV,WAAOC,GAAP,eAAAC,EAAA,6DACLD,EAAEE,iBADG,SAEWC,IAAYC,MAAM,EAAKC,MAAMC,SAAU,EAAKD,MAAME,UAF7D,QAEDC,EAFC,QAGGC,OACJ,EAAKC,QAAQC,SAAQ,GACrB,EAAKC,SAAS,CACVC,SAAU,CACNC,SAAU,aACVT,MAAO,CAAEU,KAAM,EAAKjB,MAAMkB,cAG3BR,EAAIS,OACX,EAAKL,SAAS,CACVK,OAAO,IAbV,2CAVU,sDAEf,EAAKZ,MAAQ,CACTC,SAAU,GACVC,SAAU,GACVU,MAAO,GACPJ,SAAU,IANC,E,qDA4BT,IAAD,OACL,OACI,sBAAKK,UAAU,YAAf,UACI,cAAC,IAAD,UACI,sDAEJ,qBAAKA,UAAU,mBAAf,SACI,qBAAKA,UAAU,aAAaC,IAAI,sCAAsCC,IAAI,kBAE9E,sBAAKF,UAAU,WAAf,UACKG,KAAKhB,MAAMQ,SAASC,UACjB,cAAC,IAAD,CAAUQ,GAAID,KAAKhB,MAAMQ,WAE7B,cAAC,IAAD,CAAKU,UAAW,EAAGL,UAAU,mBAA7B,SACI,uBAAMA,UAAU,YAAhB,UACI,oBAAIA,UAAU,cAAd,yBACsB,IAArBG,KAAKhB,MAAMY,OACR,oBAAIC,UAAU,aAAd,6CAIJ,qBAAKA,UAAU,aAAf,SACI,cAAC,IAAD,CAAWM,WAAS,EAACC,MAAM,UAAUC,MAAM,WAAWC,KAAK,OAAOC,QAAQ,WAAWC,MAAOR,KAAKhB,MAAMC,SAAUwB,SAAU,SAAC9B,GAAD,OAAO,EAAKY,SAAS,CAAEN,SAAUN,EAAE+B,OAAOF,aAEzK,qBAAKX,UAAU,aAAf,SACI,cAAC,IAAD,CAAWM,WAAS,EAACC,MAAM,UAAUC,MAAM,WAAWC,KAAK,WAAWC,QAAQ,WAAWC,MAAOR,KAAKhB,MAAME,SAAUuB,SAAU,SAAC9B,GAAD,OAAO,EAAKY,SAAS,CAAEL,SAAUP,EAAE+B,OAAOF,aAE7K,qBAAKX,UAAU,aAAf,SACI,cAAC,IAAD,CAAQM,WAAS,EAACC,MAAM,UAAUO,QAAS,SAAChC,GAAD,OAAO,EAAKD,OAAOC,IAA9D,wC,GA5DZiC,IAAMC,WAApBrC,EAEKsC,YAAcC,IAqEVvC","file":"static/js/13.44add99e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Box, TextField, Button } from '@material-ui/core';\r\nimport AuthService from '../../../Utils/Auth/AuthService';\r\nimport UserContext from '../../Context/UserContext'\r\n\r\nclass Login extends React.Component {\r\n\r\n    static contextType = UserContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            error: '',\r\n            redirect: {}\r\n        }\r\n    }\r\n\r\n    signIn = async (e) => {\r\n        e.preventDefault();\r\n        let res = await AuthService.login(this.state.username, this.state.password);\r\n        if (res.token) {\r\n            this.context.setAuth(true);\r\n            this.setState({\r\n                redirect: {\r\n                    pathname: '/campaigns',\r\n                    state: { from: this.props.location }\r\n                }\r\n            });\r\n        } else if (res.error) {\r\n            this.setState({\r\n                error: true\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"LoginMain\">\r\n                <Helmet>\r\n                    <title>LOG IN | S:YNTH</title>\r\n                </Helmet>\r\n                <div className=\"LoginImageHolder\">\r\n                    <img className=\"LoginImage\" src=\"../../../../assets/images/login.png\" alt='LoginDesign' />\r\n                </div>\r\n                <div className=\"LoginBox\">\r\n                    {this.state.redirect.pathname &&\r\n                        <Redirect to={this.state.redirect} />\r\n                    }\r\n                    <Box boxshadow={2} className=\"LoginFormWrapper\">\r\n                        <form className=\"LoginForm\">\r\n                            <h2 className=\"LoginHeader\"> SIGN IN! </h2>\r\n                            {this.state.error === true &&\r\n                                <h4 className=\"LoginError\">\r\n                                    Incorrect username or password!\r\n                                </h4>\r\n                            }\r\n                            <div className=\"LoginInput\">\r\n                                <TextField fullWidth color=\"#dddddd\" label=\"Username\" type=\"text\" variant=\"outlined\" value={this.state.username} onChange={(e) => this.setState({ username: e.target.value })} />\r\n                            </div>\r\n                            <div className=\"LoginInput\">\r\n                                <TextField fullWidth color=\"#dddddd\" label=\"Password\" type=\"password\" variant=\"outlined\" value={this.state.password} onChange={(e) => this.setState({ password: e.target.value })} />\r\n                            </div>\r\n                            <div className=\"LoginInput\">\r\n                                <Button fullWidth color=\"#dddddd\" onClick={(e) => this.signIn(e)} > SIGN IN </Button>\r\n                            </div>\r\n                        </form>\r\n                    </Box>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Login;"],"sourceRoot":""}