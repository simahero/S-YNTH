#TODOS

previewtable -> ui

table in table with width

- SQL POOL

- edit template modal https://www.w3schools.com/howto/howto_js_draggable.asp

- edit campaign -get templates (id, name)
- edit campaign -get single template

- lazyload
- single pages: campaign, template, audience, forms, analytics
- export

#PATHS
'/'             home
'/login'        login page
'/logout'       logout
'/campaigns'    campaigns page
'/edit'         edit campaign
'/automation'   automation
'/home'         dashboard
'/settings'     usersettings
'/preview'      email pre
'/subscribe'    add sub
'/unsubscribe'  remove sub 

https://jwt.io/
https://web.postman.co/

SELECT campaigns.id,  templates.content 
FROM campaigns 
INNER JOIN templates 
ON campaigns.template_id = templates.id

DELETE c.* 
FROM campaigns c 
INNER JOIN users u 
ON c.user_id = u.id 
WHERE (u.id = 2)

SELECT DISTINCT column1, column2, ...
FROM table_name;



#audience
id

tag
campaign_id - tag-id

1 asd

get

SELECT name FROM tag WHERE  campaign_id = id?

put

insertId = insert into ....
tags.foreach insert id + tag id

INSERT INTO tag VALUES (insertId, tag.name)


delete 

update

/*

CREATE TABLE `users` (
 `id` int(11) NOT NULL AUTO_INCREMENT,
 `username` varchar(100) NOT NULL,
 `email` varchar(100) NOT NULL,
 `password` varchar(100) NOT NULL,
 `settings` text,
 PRIMARY KEY (`id`)
)

CREATE TABLE `templates` (
 `id` int(11) NOT NULL AUTO_INCREMENT,
 `content` text NOT NULL,
 PRIMARY KEY (`id`)
) 

CREATE TABLE `campaigns` (
 `id` int(11) NOT NULL AUTO_INCREMENT,
 `user_id` int(11) NOT NULL,
 `name` varchar(100) NOT NULL,
 `created_at` date NOT NULL,
 `template_id` int(11) NOT NULL,
 `tags` int(11) NOT NULL,
 `settings` text,
 PRIMARY KEY (`id`)
)

CREATE TABLE `audiences` (
 `id` int(11) NOT NULL AUTO_INCREMENT,
 `user_id` int(11) NOT NULL,
 `email` varchar(100) NOT NULL,
 `firstname` varchar(100) NOT NULL,
 `lastname` varchar(100) NOT NULL,
 `tags` text NOT NULL,
 PRIMARY KEY (`id`)
)

CREATE TABLE `analytics` (
 `id` int(11) NOT NULL AUTO_INCREMENT,
 `campaign_id` int(11) NOT NULL,
 `results` text NOT NULL,
 PRIMARY KEY (`id`)
)

*/


 let c_tags = Array.from(this.state.campaign.tags)
        let a_tags = Array.from(this.state.tags)
        a_tags.push(c_tags[index])
        c_tags.splice(index, 1)
        let tmp = this.state.campaign
        tmp.tags = c_tags
        this.setState({ campaign: tmp, tags: a_tags }, () => {
            this.getAudienceCount()
        })

         let c_tags = Array.from(this.state.campaign.tags)
        let a_tags = Array.from(this.state.tags)
        c_tags.push(a_tags[index])
        a_tags.splice(index, 1)
        let tmp = this.state.campaign
        tmp.tags = c_tags
        this.setState({ campaign: tmp, tags: a_tags }, () => {
            this.getAudienceCount()
        })

        this.setState(prevState => ({
            ...prevState,
            data: {
                ...prevState.data,
                tags: prevState.data.tags.push(prevState.data.campaign.tags[index]),
                campaign: {
                    ...prevState.data.campaign,
                    tags: prevState.data.campaign.tags.splice(index, 1)
                }
            }
        }, () => this.getAudienceCount()))

        .DataTableHolder {
            height: calc(100vh - 80px);
            margin: 10px;
            width: calc(100% - 20px);
            background-color: #ffffff20;
            border-radius: 4px;
            text-align: center; 
        }

        <ul>
                            <li
                                onClick={() => { this.context.handler({blocks: [...this.context.state.blocks, DefultOptions.header]}) }}
                            ><Box className="EditBox" boxShadow={2}>Header</Box></li>
                            <li
                                onClick={() => { this.context.handler({blocks: [...this.context.state.blocks, DefaultOptions.parahraph]}) }}
                            ><Box className="EditBox" boxShadow={2}>Paragraph</Box></li>
                            <li
                                onClick={() => { this.context.handler({blocks: [...this.context.state.blocks, DefaultOptions.image]}) }}
                            ><Box className="EditBox" boxShadow={2}>Image</Box></li>
                            <li
                                onClick={() => { this.context.handler({blocks: [...this.context.state.blocks, DefaultOptions.socialshare]}) }}
                            ><Box className="EditBox" boxShadow={2}>SocialShare</Box></li>
                        </ul>